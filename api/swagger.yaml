swagger: "2.0"

info:
  description: "This is a simple payments API"
  version: "1.0.0"
  title: "Swagger Petstore"
  contact:
    email: "carlosr@cliche-corp.co.uk"
  license:
    name: "MIT"
    url: "https://github.com/carlosroman/payments-api/LICENSE.md"

host: "localhost:8080"
basePath: "/"

tags:
- name: "payment"
  description: "Everything about your payments"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/carlosroman/payments-api/README.md"

schemes:
- "http"

paths:
  /payment:
    post:
      tags:
      - "payment"
      summary: "Add a new payment"
      description: ""
      operationId: "addPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Payment object that needs to be added be recorded"
        required: true
        schema:
          $ref: "#/definitions/Payment"
      responses:
        201:
          description: "Payment saved"
          headers:
            Location:
              type: string
              format: url
              description: Location of the payment
        405:
          description: "Invalid input"
  /payment/search:
    get:
      tags:
      - "payment"
      summary: "Find payment by attribute"
      description: "Returns a list of payments with the given attribute"
      operationId: "getPaymentsBy"
      produces:
      - "application/json"
      parameters:
      - name: "organisation_id"
        in: "query"
        description: "ID of organisation of the payments"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Payments"
        400:
          description: "Invalid query"

  /payment/{paymentId}:
    get:
      tags:
      - "payment"
      summary: "Find payment by ID"
      description: "Returns a single payment"
      operationId: "getPaymentById"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        description: "ID of payment to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Payment"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Payment not found"
definitions:
  Payments:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: '#/definitions/Payment'
  Payment:
    type: "object"
    properties:
      type:
        type: "string"
        description: "Order Status"
        enum:
        - "payment"
      id:
        type: "string"
      version:
        type: "integer"
        format: "int32"
      organisation_id:
        type: "string"
      attributes:
        type: "object"
        properties:
          amount:
            type: "string"
          payment_id:
            type: "string"
          payment_type:
            type: "string"
          currency:
            type: "string"
          end_to_end_reference:
            type: "string"
          numeric_reference:
            type: "string"
          reference:
            type: "string"
